#!/bin/bash

# @file ttt_board_a
#
# Defines board functions for tic-tac-toe (naughts and crosses)
# This implementation uses an array to represent the board
#
# @date Sept 1, 2020
# @author philip gust
#

##
#  Initialize empty board.
#
#  @param board reference to the board
#
initBoard() {
    ### your code here
    declare -n board=$1
    board=( _ _ _ _ _ _ _ _ _ )
}

##
#  Mark the board position with the marker of a player (X or O).
#
#  @param marker the marker for a player (X or O)
#  @param bpos the row major position on the board (1-9)
#  @param reference to the board
#  @return 0 if board position marked, 1 if cannot mark position
#
markBoard() {
    ### your code here
    marker=$1
    bpos=$2
    declare -n reference=$3
    idx=$(( $bpos - 1 ))
    # if $marker != "X" || $marker != "O" echo "invalid marker"
    # if $bpos > 9 || < 1 echo "invalid position"

    if [ ${reference[$idx]} == "_" ]; then
      reference[$idx]=$marker
      # $reference[$idx]=$marker 为什么不可以
      #printf "board position marked"
      return 0
      #echo $? #到底返回多少，怎么返回待商榷
    else  
      #printf "cannot mark"
      return 1
      #echo $?
    fi

}

##
#  Determines whether given marker has won. Only if
#  marker has three columns in row or three rows in
#  column, or all in one of the two diagonals.
#
#  @param marker the X or O marker
#  @param reference to the board
#  @return 0 if marker has won, 1 otherwise.
#
hasWon() {
    ### your code here
    marker=$1
    declare -n reference=$2
    #printf "reference[0] %s\n" ${reference[0]} 
    con1=[ ${reference[0]} == $marker ] && [ ${reference[1]} == $marker ] && [ ${reference[2]} == $marker ]
    con2=[ ${reference[3]} == $marker ] && [ ${reference[4]} == $marker ] && [ ${reference[5]} == $marker ]
    if [ con1 ] || [ con2 ]
    # if [ ${reference[0]} == $marker ] && [ ${reference[1]} == $marker ] && [ ${reference[2]} == $marker ] 
    # || [ ${reference[3]} == $marker ] && [ ${reference[4]} == $marker ] && [ ${reference[5]} == $marker ]; 
    # || [ $reference[6] == $marker ] && [ $reference[7] == $marker ] && [ $reference[8] == $marker ] 
    # || [ $reference[0] == $marker ] && [ $reference[3] == $marker ] && [ $reference[6] == $marker ] 
    # || [ $reference[1] == $marker ] && [ $reference[4] == $marker ] && [ $reference[7] == $marker ] 
    # || [ $reference[2] == $marker ] && [ $reference[5] == $marker ] && [ $reference[8] == $marker ] 
    # || [ $reference[0] == $marker ] && [ $reference[4] == $marker ] && [ $reference[8] == $marker ] 
    # || [ $reference[2] == $marker ] && [ $reference[4] == $marker ] && [ $reference[6] == $marker ]; 
    then
      return 0
      #echo $?
    else
      return 1
      #echo $?
    fi
}

##
#  Display the board.
#
#  @param reference to the board
#
displayBoard() {
    ### your code here
    reference=$1
}
